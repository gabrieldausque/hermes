# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# this is a group variables to manage versioning number for all pipelines in the same repo
variables:
  - group: fwk_versioning_variables
  - name: semanticVersion
    value: $[counter(variables['majorMinorVersion'], 0)]

trigger:
  batch: true
  branches:
    include:
      - features/*
      - bugs/*

pr:
  branches:
    include:
      - master
      - integration

resources:
  containers:
    - container: redis
      image: redis
      ports:
        - 6379:6379
        - 6380:6379

pool:
  vmImage: 'ubuntu-latest'

services:
  redis: redis

steps:

  - task: PowerShell@2
    displayName: List env
    inputs:
      targetType: inline
      script: "get-childitem env:"

  - checkout: self
    clean: true
    persistCredentials: true

  - template: build/templates/versioning.yaml

  - task: Npm@1
    displayName: General Install
    inputs:
      command: install

  - task: Npm@1
    displayName: Change version of all packages
    inputs:
      command: custom
      customCommand: run ver -- $(majorMinorVersion).$(semanticVersion)

  - task: Npm@1
    displayName: Bootstrap all projects
    inputs:
      command: custom
      customCommand: run bootstrap

  - task: Npm@1
    displayName: Build all projects
    inputs:
      command: custom
      customCommand: run build

  - task: Npm@1
    displayName: Run all tests
    inputs:
      command: custom
      customCommand: run test

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      mergeTestResults: true
      testRunTitle: 'UI Jest tests'
    displayName: Publish tests results

  - task: reportgenerator@4
    displayName: Merging cobertura files
    inputs:
      reports: $(Build.SourcesDirectory)/**/coverage/cobertura-coverage.xml
      targetdir: $(Build.SourcesDirectory)/CoverageResults
      verbosity: Verbose

  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/CoverageResults/Cobertura.xml'
    displayName: Publish code coverage

  - task: Npm@1
    displayName: 'Publish Composition'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
    inputs:
      command: publish
      publishRegistry: useFeed
      publishFeed: Hermes/hermes
      workingDir: $(Build.Repository.LocalPath)/packages/composition/

  - task: Npm@1
    displayName: 'Publish Topic'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
    inputs:
      command: publish
      publishRegistry: useFeed
      publishFeed: Hermes/hermes
      workingDir: $(Build.Repository.LocalPath)/packages/topic/

  - task: Npm@1
    displayName: 'Publish Jobs'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
    inputs:
      command: publish
      publishRegistry: useFeed
      publishFeed: Hermes/hermes
      workingDir: $(Build.Repository.LocalPath)/packages/jobs/

  - task: Npm@1
    displayName: 'Publish BullJobs'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
    inputs:
      command: publish
      publishRegistry: useFeed
      publishFeed: Hermes/hermes
      workingDir: $(Build.Repository.LocalPath)/packages/bull-jobs/

  - task: Npm@1
    displayName: 'Publish BullMQ Jobs'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
    inputs:
      command: publish
      publishRegistry: useFeed
      publishFeed: Hermes/hermes
      workingDir: $(Build.Repository.LocalPath)/packages/bullmq-jobs/
