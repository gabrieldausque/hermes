# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

resources:
 containers:
   - container: redis
     image: redis
     ports:
     - 6379:6379
     - 6380:6379

pool:
  vmImage: 'ubuntu-latest'

services:
  redis: redis

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    sudo apt install -y redis-tools
    redis-cli -h localhost ping
  displayName: Test redis connection
  enabled: false

- task: Npm@1
  inputs:
    command: install
  displayName: npm install before test

- script: |
    node_modules/ts-mocha/bin/ts-mocha --version
    export NODE_ENV=test
    echo NODE_ENV set to $NODE_ENV
    node_modules/ts-mocha/bin/ts-mocha "test/**/*.ts" --full-trace --recursive --reporter mocha-multi-reporters --reporter-options configFile=mocha-config.json --exit
  displayName: try mocha without npm

- task: Npm@1
  inputs:
    command: custom
    customCommand: run test
    verbose: false
  displayName: Running tests
  continueOnError: true

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit.xml'
    mergeTestResults: true
    testRunTitle: 'All tests results'
  displayName: Publish tests results

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '**/cobertura-coverage.xml'
  displayName: Publish code coverage

- script: |
    npm run compileCompositionPackage
  displayName: 'npm install and compile Composition package'

- script: |
    npm run compileTopicPackage
  displayName: 'npm install and compile Topic Package'

- script: |
    npm run compileJobsPackage
  displayName: 'npm install and compile Jobs Package'

- script: |
    npm run compileBullJobsPackage
  displayName: 'npm install and compile Bull-Jobs Package'

- task: Npm@1
  displayName: 'Publish Composition to Azure Dev ops Hermes/hermes feed'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'), eq(variables['publishComposition'],'true'))
  inputs:
    command: publish
    publishRegistry: useFeed
    publishFeed: Hermes/hermes
    workingDir: $(Build.Repository.LocalPath)/src/hermes_modules/composition/

- task: Npm@1
  displayName: 'Publish topic to Azure Dev ops Hermes/hermes feed'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'), eq(variables['publishTopic'],'true'))
  inputs:
    command: publish
    publishRegistry: useFeed
    publishFeed: Hermes/hermes
    workingDir: $(Build.Repository.LocalPath)/src/hermes_modules/topic/

- task: Npm@1
  displayName: 'Publish Jobs to Azure Dev ops Hermes/hermes feed'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'), eq(variables['publishJobs'],'true'))
  inputs:
    command: publish
    publishRegistry: useFeed
    publishFeed: Hermes/hermes
    workingDir: $(Build.Repository.LocalPath)/src/hermes_modules/jobs/

- task: Npm@1
  displayName: 'Publish Bull Jobs to Azure Dev ops Hermes/hermes feed'
  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'), eq(variables['publishBullJobs'],'true'))
  inputs:
    command: publish
    publishRegistry: useFeed
    publishFeed: Hermes/hermes
    workingDir: $(Build.Repository.LocalPath)/src/hermes_modules/bull-jobs/


